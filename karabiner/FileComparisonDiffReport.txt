2,7c2,14
<  {:Goku {:default true
<          :alone   80 ; hold for .. ms to register single tap
<          :held    50 ; TODO: not sure what it's for
<          :delay   0 ; time after which the key press is delayed
<          :sim     30} ; keys need to be pressed within this threshold to be considered simultaneous
<  :test {:sim 50 :delay 500 :alone 500 :held 500}}
---
>  {:goku
>   {:default true
>    :sim 50
>    :delay 80
>    :alone 120
>    :held 70},
>   :dq
>   {:default false
>    :sim 50
>    :delay 80
>    :alone 120
>    :held 70},
>   :test {:default false :sim 50 :delay 500 :alone 500 :held 500}}
10,11c17
<              :open "open \"%s\""
<              :type       "osascript -e 'tell application \"System Events\" to keystroke \"%s\" as text'"}
---
>              :open "open \"%s\""}
19,28c25,29
<  :tos       {:same_wind_app   {:key :grave_accent_and_tilde :modi [:left_command] :lazy true}
<              :prev_app        {:key :tab :modi [:left_command] :lazy true}
<              :left_paren      {:key :9 :modi [:left_shift] :lazy true}
<              :right_paren     {:key :0 :modi [:left_shift] :lazy true}
<              :home_dir        [{:key :grave_accent_and_tilde :modi [:left_shift] :lazy true}
<                                {:key :slash}]
<              :regex_match_any [{:key :period}
<                                {:key :8 :modi [:left_shift] :lazy true}]
<              :select_cn       {:select_input_source
<                                {:input_mode_id   ""
---
> 	 :applications {
>          :chromes ["^com\\.google\\.Chrome$" "^com\\.google\\.Chrome\\.canary$"]
>          }
>  :input-sources {
>                 :us {:input_mode_id ""
29a31,33
>                      :language "en"}
>                  :dq {:input_mode_id ""
>                       :input_source_id "com.apple.keylayout.DVORAK-QWERTYCMD"
31,74c35,36
<              :select_abc      {:select_input_source
<                                {:input_source_id "^com\\.apple\\.keylayout\\.ABC$"}}}
<  :modifiers {:ro :right_option}
<  
<  :layers    {:tab-mode              {:key     :tab
<                                      :afterup [{:set ["yabai-move-mode" 0]}
<                                                {:set ["yabai-scale-mode" 0]}
<                                                {:set ["spec-mode" 0]}]
<                                      :condi   [:!comma-mode :!period-mode]}
<              :yabai-move-mode       {:key :f :condi :tab-mode}
<              :yabai-scale-mode      {:key :c :condi :tab-mode}
<              :spec-mode             {:key :s :condi :tab-mode}
<              ;; :yabai-insert-mode     {:key :i :condi :tab-mode}
<              :emacs-windmove-mode   {:key :q :condi [:Emacs :!comma-mode :!period-mode]}
<              :emacs-windresize-mode {:key :c :condi :emacs-windmove-mode}
<              :emacs-bufmove-mode    {:key :f :condi :emacs-windmove-mode}
<              :period-mode           {:key :period :afterup {:set ["period-comma-mode" 0]} :condi [:!emacs-s-mode :!tmux-windmove-mode :!k2-mode]}
<              :comma-mode            {:key :comma :condi [:!emacs-s-mode :!tmux-windmove-mode]}
<              :tmux-windmove-mode    {:key :q :condi [:Terminals :!comma-mode :!period-mode]}
<              :tmux-windresize-mode  {:key :c :condi :tmux-windmove-mode}
<              :k2-mode               {:key :2 :condi [:!tab-mode :!tmux-windmove-mode]}}
<  :simlayers {:test-mode             {:key :9}
<              :contexts-f-mode       {:key :f}
<              :emacs-m-mode          {:key :m :condi :Emacs}
<              :emacs-v-mode          {:key :v :condi :Emacs}
<              :emacs-special-s-mode  {:key :s :condi :Emacs :afterup {:key :return_or_enter}}
<              :emacs-s-mode          {:key :s :condi :Emacs}
<              :vscode-s-mode         {:key :s :condi :VSCode}
<              :browser-s-mode        {:key :s :condi :Browsers}
<              :emacs-s-mode-terminal {:key :s :condi :Terminals}
<              :mouse_keys_mode_v4    {:key :a :afterup {:set ["mouse_keys_mode_v4_scroll" 0]}}
<              :vi-mode               {:key :d}
<              :vi-visual-mode        {:key :v :condi :!vim-mode-disabled-application}
<              ;:launch-mode           {:key :w}
<              ;; :q-mode {:key :q :condi [:!comma-mode :!period-mode]}
<              :alfred-mode           {:key :z}
<              :finder-alfred-mode    {:key :z :condi :Finder}
<              :browsers-alfred-mode  {:key :z :condi :Browsers}
<               		:2-mode {:key :2}
<                 :3-mode {:key :3}
<                         :semicolon-mode {:key :semicolon}
<                 :w-mode {:key :w}
<                 :e-mode {:key :e}
<                 :d-mode {:key :d}
---
> 
>  :simlayers{
75a38,41
>              :e-mode {:key :e}
>              :q-mode {:key :q}
>              :semicolon-mode {:key :semicolon}
>              :c-mode {:key :c}
77,78c43,47
<                 :g-mode {:key :g}
<                 :r-mode {:key :r}
---
>              :w-mode {:key :w}
>              :o-mode {:key :o}
>              :quote-mode {:key :quote}
>              :z-mode {:key :z}
>              :slash-mode {:key :slash}
80,81d48
<                 :f-mode {:key :f}
<                 :v-mode {:key :v}
83,103c50,51
<                 :q-mode {:key :q}
<                 :o-mode {:key :o}}
<              
<  :main      [{:des   "mouse motion to scroll"
<               :rules [{:type :mouse_motion_to_scroll :from {:modifiers {:mandatory [:left_command :left_shift]}} :options {:momentum_scroll_enabled true}}]}
<                 {:des   "contexts"
<                  :rules [[[:m :l] [:f16 ["in-contexts" 1]]]
<                       ;;[:semicolon :right_option nil {:alone :semicolon}]
<                         [:escape [:escape ["in-contexts" 0]] ["in-contexts" 1]]
<                         [{:pkey :button1} [{:pkey :button1} ["in-contexts" 0]] ["in-contexts" 1]]
<                         [:##left_control :left_control ["in-contexts" 1] {:alone [:escape ["in-contexts" 0]]}]
<                         [:##caps_lock [:left_control] ["in-contexts" 1] {:alone [:escape ["in-contexts" 0]]}]
<                         [:return_or_enter [:return_or_enter ["in-contexts" 0]] ["in-contexts" 1]]
<                         [:!Tm [:return_or_enter ["in-contexts" 0]] ["in-contexts" 1]]
<                         :contexts-f-mode
<                         [:j [["in-contexts" 1] :f16] ["in-contexts" 0]]
<                         [:k [["in-contexts" 1] :f16] ["in-contexts" 0]]
<                         [:j :down_arrow ["in-contexts" 1]]
<                         [:k :up_arrow ["in-contexts" 1]]
<                         [:e [:f :e]]
<                         [:l [:return_or_enter ["in-contexts" 0]] ["in-contexts" 1]]]}
---
>              }
>  :main [
107,126c55,84
<                 [:p :close_bracket]]}       
<          {:des "jsim"
<          :rules [[[:j :k] [:alfred "search google" "net.deanishe.alfred-searchio"]]
<                  [[:j :semicolon] [:alfred "search tabs" "net.deanishe.alfred.safari"]]
<                  [[:j :l] :!CTOSspacebar]]} ; Alfred
<         {:des "ksim"
<          :rules [[[:k :l] [:alfred "search dash" "com.kapeli.dash.workflow"]]
<                  [[:k :m] [:alfred "search youtube" "net.deanishe.alfred-searchio"]]]}
<         {:des "RF Modifiers right cmd -> Alfred/left opt -> cmd+tab"
<          :rules [:REALFORCE
< 	        [:##right_option :right_command nil {:alone :!CTOSspacebar}]
<                 [:##right_command :right_option]
<                 [:##left_command :left_option]
< 	        [:##left_option :left_command nil {:alone :!Ctab}]]}
<         {:des   "caps_lock to esc when pressed alone, to ctrl as modifier"
<          :rules [[:##caps_lock :left_control nil {:alone :escape}]]}
<         {:des "right cmd -> Alfred"
<          :rules [[:right_command :right_command nil {:alone :!CTOSspacebar}]]}
<         {:des "left cmd -> cmd+tab"
<          :rules [[:##left_command :left_command nil {:alone :!Ctab}]]}
---
>                 [:p :close_bracket]]}
>          {:des "nkey (alfred)"
>          :rules [:n-mode
>                  [:1 :!O1]
>                  [:2 :!O2]
>                  [:3 :!O3]
>                  [:4 :!O4]
>                  [:5 :!O5]
>                  [:6 :!O6]
>                  [:q [:alfred "search github" "nikivi.search.the.web"]]
>                  [:w [:alfred "search twitter" "nikivi.search.the.web"]]
>                  [:e [:alfred "search subs" "net.deanishe.alfred-reddit"]]
>                  [:r [:alfred "search reddit" "nikivi.search.the.web"]]
>                  [:t [:alfred "ssh" "net.deanishe.alfred-ssh"]]
>                  [:a [:alfred "search shares" "nikivi.ask.create.share"]]
>                  [:s [:alfred "search websites" "nikivi.web.searches"]]
>                  [:d [:alfred "search stack overflow" "net.deanishe.alfred-stackoverflow"]]
>                  ;[:d [:alfred "search packages" "com.sindresorhus.npms"]]
>                  [:f [:alfred "search repos" "me.lachlan.githubjump"]]
>                  [:g [:alfred "search godoc" "nikivi.search.the.web"]]
>                  [:o [:alfred "search alfred" "nikivi.utilities" "django "]]
>                  [:h [:alfred "search hn" "nikivi.search.the.web"]]
>                  [:grave_accent_and_tilde [:alfred "search learn anything" "nikivi.learn.anything"]]
>                  [:z [:alfred "search lobsters" "nikivi.search.the.web"]]
>                  [:x [:alfred "search stack" "net.deanishe.alfred-stackoverflow"]]
>                  [:c [:alfred "search wiki" "nikivi.mind"]]
>                  [:v [:alfred "search links" "nikivi.mind"]]
>                                         ;[:v [:alfred "search pinboard" "nikivi.search.the.web"]] ; TODO: topics/search/more?
>                  [:b [:alfred "search bookmarks" "net.deanishe.alfred.safari"]]
>                  [:spacebar [:alfred "search history" "net.deanishe.alfred.safari"]]]}
128a87,90
>                  [:3 [:alfred "search alfred" "nikivi.utilities" "d3 "]]
>                  [:e [:alfred "search alfred" "nikivi.utilities" "html "]]
>                  [:r [:alfred "search alfred" "nikivi.utilities" "react "]]
>                  [:t [:alfred "search alfred" "nikivi.utilities" "ts "]]
130c92
<                  [:c [:alfred "search alfred" "nikivi.utilities" "css "]]
---
>                  [:a [:alfred "search alfred" "nikivi.utilities" "apple "]]
131a94,95
>                  [:d [:alfred "search alfred" "nikivi.utilities" "node "]]
>                  [:g [:alfred "search alfred" "nikivi.utilities" "godoc "]]
132a97
>                  [:c [:alfred "search alfred" "nikivi.utilities" "css "]]
134,137d98
<                  [:d [:alfred "search alfred" "nikivi.utilities" "node "]]
<                  [:e [:alfred "search alfred" "nikivi.utilities" "html "]]
<                  [:a [:alfred "search alfred" "nikivi.utilities" "apple "]]
<                  [:3 [:alfred "search alfred" "nikivi.utilities" "d3 "]]
139,141d99
<                  [:t [:alfred "search alfred" "nikivi.utilities" "ts "]]
<                  [:r [:alfred "search alfred" "nikivi.utilities" "react "]]
<                  [:g [:alfred "search alfred" "nikivi.utilities" "godoc "]]
143,166c101,125
<         {:des "n (alfred)"
<           :rules [:n-mode
<                  [:f [:alfred "search repos" "me.lachlan.githubjump"]]]}
<         {:des "w/, (apps)"
<          :rules [:w-mode
<                 [:q [:km "open: qutebrowser"]]
<                 [:e [:km "open: Finder"]]
<                 [:t [:km "open: 2Do"]]
<                 [:o [:km "open: Keyboard Maestro"]]
<                 [:a :!OSC1] ; Open Dash
<                 [:d [:km "open: Dash"]]
<                 [:f [:km "open: Fantastical"]]
<                 [:g [:km "open: GitKraken"]]
<                 [:h [:km "open: Paw"]]
<                 [:j [:km "open: Alacritty"]]
<                 [:k [:km "open: Safari"]]
<                 [:l [:km "open: Code"]]
<                 [:semicolon [:km "open: MacVim"]]
<                 [:quote [:km "open: Emacs"]]
<                 [:c [:km "open: Google Chrome"]]
<                 [:v [:km "open: Vivaldi"]]
<                 [:b [:km "open: BetterTouchTool"]]
<                 [:n [:km "open: Sublime Text"]]
<                 [:period [:km "open: SnippetsLab"]]
---
>         {:des "jsim"
>          :rules [[[:j :k] [:alfred "search google" "net.deanishe.alfred-searchio"]]
>                  [[:j :semicolon] [:alfred "search tabs" "net.deanishe.alfred.safari"]]
>                  [[:j :l] :!CTOSspacebar]]} ; Alfred
>         {:des "ksim"
>          :rules [[[:k :l] [:alfred "search dash" "com.kapeli.dash.workflow"]]
>                  [[:k :m] [:alfred "search youtube" "net.deanishe.alfred-searchio"]]]}
>         {:des "skey (essentials)"
>          :rules [:s-mode
>                  [:spacebar [:open "/System/Applications/Siri.app"]]
>                  [:a :!Cc] ; Copy
>                  [:d :delete_or_backspace]
>                  [:f :return_or_enter]
>                  [:g :!Ctab]
>                  [:##h :left_arrow]
>                  [:##j :down_arrow]
>                  [:##k :up_arrow]
>                  [:##l :right_arrow]
>                  [:semicolon :!CTO9] ; Search Typinator
>                  [:quote [:!Cleft_arrow :!CSright_arrow]] ; Highlight current line
>                  [:c :!Cdelete_or_backspace]
>                  [:v :left_shift]
>                  [:##b :!Cleft_arrow]
>                  [:n :!Cv] ; Paste
>                  [:##m :!Cright_arrow]
299c258
<                  [:right_arrow :!Tright_arrow]]}
---
>                  [:right_arrow :!Tright_arrow]]}	
431a391,438
>         {:des "C-mode (utility)"
>          :rules [:c-mode
>                  [:d :!!!g]]}
>         {:des   "global C-h to backspace"
>          :rules [[:!Th :delete_or_backspace nil {:params {:alone 500 :held 500}}]]}
>         {:des   "in-alfred"
>          :rules [:in-alfred
>                  [:!Tw :!Odelete_or_backspace]
>                  [:!Ty :!Cv]
>                  [:!Tslash :!Cz]
>                  [:escape [:escape ["in-alfred" 0]]]
>                  [:return_or_enter [:return_or_enter ["in-alfred" 0]]]
>                  [:##left_control :left_control nil {:alone [:escape ["in-alfred" 0]]}]
>                  [:##caps_lock [:left_control] nil {:alone [:escape ["in-alfred" 0]]}]
>                  [:!Ctab [:!Ctab ["in-alfred" 0]]]
>                  [:!Cright_command [:!Ctab ["in-alfred" 0]]]
>                  [:!Tsemicolon [:!Treturn_or_enter ["in-alfred" 0]]]
>                  [:!Tl [:return_or_enter ["in-alfred" 0]]]
>                  [:!Tj :down_arrow]
>                  [:!Tk :up_arrow]
>                  [:!Oh :left_arrow]
>                  [:!Oj :down_arrow]
>                  [:!Ok :up_arrow]
>                  [:!Ol :right_arrow]
>                  [:!OSh :!OSleft_arrow]
>                  [:!OSj :!OSdown_arrow]
>                  [:!OSk :!OSup_arrow]
>                  [:!OSl :!OSright_arrow]]}
>         {:des "realforce right cmd -> Alfred"
>          :rules [:REALFORCE
>                  [:##right_option :right_command nil {:alone :!CTOSspacebar}]]}
>         {:des "realforce right option"
>          :rules [:REALFORCE
>                  [:##right_command :right_option]]}
>         {:des "realforce left command"
>          :rules [:REALFORCE
>                  [:##left_command :left_option]]}
>         {:des "realfroce left opt -> cmd+tab"
>          :rules [:REALFORCE
>                  [:##left_option :left_command nil {:alone :!Ctab}]]}
>         {:des   "caps_lock to esc when pressed alone, to ctrl as modifier"
>          :rules [[:##caps_lock :left_control nil {:alone :escape}]]}
>         {:des "right cmd -> Alfred"
>          :rules [[:right_command :right_command nil {:alone :!CTOSspacebar}]]}
>         {:des "left cmd -> cmd+tab"
>          :rules [[:##left_command :left_command nil {:alone :!Ctab}]]}
>                                         ; {:des   "return_or_enter to control when pressed with other keys"
>                                         ;       :rules [[:##return_or_enter :left_control nil {:alone :return_or_enter}]]}
475,506c482,485
<         {:des "C-mode (utility)"
<          :rules [:c-mode
<                  [:d :!!!g]]}
<         {:des   "global C-h to backspace"
<          :rules [[:!Th :delete_or_backspace nil {:params {:alone 500 :held 500}}]]}
<              {:des   "in-alfred"
<               :rules [:in-alfred
<                       [:!Tw :!Odelete_or_backspace]
<                       [:!Ty :!Cv]
<                       [:!Tslash :!Cz]
<                       [:escape [:escape ["in-alfred" 0]]]
<                       [:return_or_enter [:return_or_enter ["in-alfred" 0]]]
<                       [:##left_control :left_control nil {:alone [:escape ["in-alfred" 0]]}]
<                       [:##caps_lock [:left_control] nil {:alone [:escape ["in-alfred" 0]]}]
<                       [:!Ctab [:!Ctab ["in-alfred" 0]]]
<                       [:!Cright_command [:!Ctab ["in-alfred" 0]]]
<                       [:!Tsemicolon [:!Treturn_or_enter ["in-alfred" 0]]]
<                       [:!Tl [:return_or_enter ["in-alfred" 0]]]
<                       [:!Tj :down_arrow]
<                       [:!Tk :up_arrow]
<                       [:!Oh :left_arrow]
<                       [:!Oj :down_arrow]
<                       [:!Ok :up_arrow]
<                       [:!Ol :right_arrow]
<                       [:!OSh :!OSleft_arrow]
<                       [:!OSj :!OSdown_arrow]
<                       [:!OSk :!OSup_arrow]
<                       [:!OSl :!OSright_arrow]]}]
<  :input-sources      {:us       {:input_mode_id   ""
<                                  :input_source_id "com.apple.keylayout.US"
<                                  :language        "en"}
<                       :abc      {:input_source_id "^com\\.apple\\.keylayout\\.ABC$"}}}
---
>         {:des "dvorakCMDqwerty"
>           :rules [:dq
>                   [:s :o]]}
> ]}
