{:profiles
 {:Goku {:default true
         :alone   80 ; hold for .. ms to register single tap
         :held    50 ; TODO: not sure what it's for
         :delay   0 ; time after which the key press is delayed
         :sim     30} ; keys need to be pressed within this threshold to be considered simultaneous
 :test {:sim 50 :delay 500 :alone 500 :held 500}}
 :templates {:alfred "osascript -e 'tell application \"Alfred 4\" to run trigger \"%s\" in workflow \"%s\" with argument \"%s\"'"
             :km "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\"'"
             :open "open \"%s\""
             :type       "osascript -e 'tell application \"System Events\" to keystroke \"%s\" as text'"
             }
 :layers    {:tab-mode              {:key     :tab
                                     :afterup [{:set ["yabai-move-mode" 0]}
                                               {:set ["yabai-scale-mode" 0]}
                                               {:set ["spec-mode" 0]}]
                                     :condi   [:!comma-mode :!period-mode]}
             :yabai-move-mode       {:key :f :condi :tab-mode}
             :yabai-scale-mode      {:key :c :condi :tab-mode}
             :spec-mode             {:key :s :condi :tab-mode}
             ;; :yabai-insert-mode     {:key :i :condi :tab-mode}
             :emacs-windmove-mode   {:key :q :condi [:Emacs :!comma-mode :!period-mode]}
             :emacs-windresize-mode {:key :c :condi :emacs-windmove-mode}
             :emacs-bufmove-mode    {:key :f :condi :emacs-windmove-mode}
             :period-mode           {:key :period :afterup {:set ["period-comma-mode" 0]} :condi [:!emacs-s-mode :!tmux-windmove-mode :!k2-mode]}
             :comma-mode            {:key :comma :condi [:!emacs-s-mode :!tmux-windmove-mode]}
             :tmux-windmove-mode    {:key :q :condi [:Terminals :!comma-mode :!period-mode]}
             :tmux-windresize-mode  {:key :c :condi :tmux-windmove-mode}
             :k2-mode               {:key :2 :condi [:!tab-mode :!tmux-windmove-mode]}}
 :simlayers {:test-mode             {:key :9}
             :contexts-f-mode       {:key :f}
             :emacs-m-mode          {:key :m :condi :Emacs}
             :emacs-v-mode          {:key :v :condi :Emacs}
             :emacs-special-s-mode  {:key :s :condi :Emacs :afterup {:key :return_or_enter}}
             :emacs-s-mode          {:key :s :condi :Emacs}
             :vscode-s-mode         {:key :s :condi :VSCode}
             :browser-s-mode        {:key :s :condi :Browsers}
             :emacs-s-mode-terminal {:key :s :condi :Terminals}
             :mouse_keys_mode_v4    {:key :a :afterup {:set ["mouse_keys_mode_v4_scroll" 0]}}
             :vi-mode               {:key :d}
             :vi-visual-mode        {:key :v :condi :!vim-mode-disabled-application}
             :launch-mode           {:key :w}
             ;; :q-mode {:key :q :condi [:!comma-mode :!period-mode]}
             :alfred-mode           {:key :z}
             :finder-alfred-mode    {:key :z :condi :Finder}
             :browsers-alfred-mode  {:key :z :condi :Browsers}}
             
 :main      [{:des   "mouse motion to scroll"
              :rules [{:type :mouse_motion_to_scroll :from {:modifiers {:mandatory [:left_command :left_shift]}} :options {:momentum_scroll_enabled true}}]}
                {:des   "contexts"
                 :rules [[[:m :l] [:f16 ["in-contexts" 1]]]
                        [:semicolon :right_option nil {:alone :semicolon}]
                        [:escape [:escape ["in-contexts" 0]] ["in-contexts" 1]]
                        [{:pkey :button1} [{:pkey :button1} ["in-contexts" 0]] ["in-contexts" 1]]
                        [:##left_control :left_control ["in-contexts" 1] {:alone [:escape ["in-contexts" 0]]}]
                        [:##caps_lock [:left_control] ["in-contexts" 1] {:alone [:escape ["in-contexts" 0]]}]
                        [:return_or_enter [:return_or_enter ["in-contexts" 0]] ["in-contexts" 1]]
                        [:!Tm [:return_or_enter ["in-contexts" 0]] ["in-contexts" 1]]
                        :contexts-f-mode
                        [:j [["in-contexts" 1] :f16] ["in-contexts" 0]]
                        [:k [["in-contexts" 1] :f16] ["in-contexts" 0]]
                        [:j :down_arrow ["in-contexts" 1]]
                        [:k :up_arrow ["in-contexts" 1]]
                        [:e [:f :e]]
                        [:l [:return_or_enter ["in-contexts" 0]] ["in-contexts" 1]]]}
             {:des   "in-alfred"
              :rules [:in-alfred
                      [:!Tw :!Odelete_or_backspace]
                      [:!Ty :!Cv]
                      [:!Tslash :!Cz]
                      [:escape [:escape ["in-alfred" 0]]]
                      [:return_or_enter [:return_or_enter ["in-alfred" 0]]]
                      [:##left_control :left_control nil {:alone [:escape ["in-alfred" 0]]}]
                      [:##caps_lock [:left_control] nil {:alone [:escape ["in-alfred" 0]]}]
                      [:!Ctab [:!Ctab ["in-alfred" 0]]]
                      [:!Cright_command [:!Ctab ["in-alfred" 0]]]
                      [:!Tsemicolon [:!Treturn_or_enter ["in-alfred" 0]]]
                      [:!Tl [:return_or_enter ["in-alfred" 0]]]
                      [:!Tj :down_arrow]
                      [:!Tk :up_arrow]
                      [:!Oh :left_arrow]
                      [:!Oj :down_arrow]
                      [:!Ok :up_arrow]
                      [:!Ol :right_arrow]
                      [:!OSh :!OSleft_arrow]
                      [:!OSj :!OSdown_arrow]
                      [:!OSk :!OSup_arrow]
                      [:!OSl :!OSright_arrow]]}]
 :input-sources      {:squirrel {:input_mode_id   "^com\\.googlecode\\.rimeime\\.inputmethod\\.Squirrel$"
                                 :input_source_id "^com\\.googlecode\\.rimeime\\.inputmethod\\.Squirrel\\.Rime$"}
                      :us       {:input_mode_id   ""
                                 :input_source_id "com.apple.keylayout.US"
                                 :language        "en"}
                      :abc      {:input_source_id "^com\\.apple\\.keylayout\\.ABC$"}
                      :cn       {:input_source_id "^com\\.apple\\.inputmethod\\.SCIM\\.ITABC$"}}
}
